@inproceedings{gupta2022act,
    author = {Gupta, Udit and Elgamal, Mariam and Hills, Gage and Wei, Gu-Yeon and Lee, Hsien-Hsin S. and Brooks, David and Wu, Carole-Jean},
    title = {ACT: designing sustainable computer systems with an architectural carbon modeling tool},
    year = {2022},
    isbn = {9781450386104},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/3470496.3527408},
    doi = {10.1145/3470496.3527408},
    abstract = {Given the performance and efficiency optimizations realized by the computer systems and architecture community over the last decades, the dominating source of computing's carbon footprint is shifting from operational emissions to embodied emissions. These embodied emissions owe to hardware manufacturing and infrastructure-related activities. Despite the rising embodied emissions, there is a distinct lack of architectural modeling tools to quantify and optimize the end-to-end carbon footprint of computing. This work proposes ACT, an architectural carbon footprint modeling framework, to enable carbon characterization and sustainability-driven early design space exploration. Using ACT we demonstrate optimizing hardware for carbon yields distinct solutions compared to optimizing for performance and efficiency. We construct use cases, based on the three tenets of sustainable design---Reduce, Reuse, Recycle---to highlight future methods that enable strong performance and efficiency scaling in an environmentally sustainable manner.},
    booktitle = {Proceedings of the 49th Annual International Symposium on Computer Architecture},
    pages = {784-799},
    numpages = {16},
    keywords = {sustainable computing, mobile, manufacturing, energy, computer architecture},
    location = {New York, New York},
    series = {ISCA '22}
}

@inproceedings{he2023hotcarbon, 
    series={HotCarbon ’23},
   title={EnergAt: Fine-Grained Energy Attribution for Multi-Tenancy},
   url={http://dx.doi.org/10.1145/3604930.3605716},
   DOI={10.1145/3604930.3605716},
   booktitle={Proceedings of the 2nd Workshop on Sustainable Computer Systems},
   publisher={ACM},
   author={Hè, Hongyu and Friedman, Michal and Rekatsinas, Theodoros},
   year={2023},
   month=jul, collection={HotCarbon '23} }


@inproceedings {CherryPick,
author = {Omid Alipourfard and Hongqiang Harry Liu and Jianshu Chen and Shivaram Venkataraman and Minlan Yu and Ming Zhang},
title = {{CherryPick}: Adaptively Unearthing the Best Cloud Configurations for Big Data Analytics},
booktitle = {14th USENIX Symposium on Networked Systems Design and Implementation (NSDI 17)},
year = {2017},
isbn = {978-1-931971-37-9},
address = {Boston, MA},
pages = {469--482},
url = {https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/alipourfard},
publisher = {USENIX Association},
month = mar
}

@inproceedings{AQUATOPE,
  author    = {Zhuangzhuang Zhou and Yanqi Zhang and Christina Delimitrou},
  title     = {AQUATOPE: {QoS}-and-Uncertainty-Aware Resource Management for Multi-stage Serverless Workflows},
  booktitle = {ASPLOS 2023: Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 1},
  year      = {2023},
  pages     = {1--14},
  doi       = {10.1145/3567955.3567960},
  month     = mar,
  url       = {https://doi.org/10.1145/3567955.3567960},
  publisher = {ACM Press}
}

@inproceedings{GreenCourier,
  author    = {Mohak Chadha and Thandayuthapani Subramanian and Eishi Arima and Michael Gerndt and Martin Schulz and Osama Abboud},
  title     = {GreenCourier: Carbon-Aware Scheduling for Serverless Functions},
  booktitle = {WoSC '23: Proceedings of the 9th International Workshop on Serverless Computing},
  year      = {2023},
  pages     = {18--23},
  doi       = {10.1145/3631295.3631396},
  month     = dec,
  url       = {https://doi.org/10.1145/3631295.3631396},
  publisher = {ACM Press}
}

@inproceedings{bibal2023acm,
  author = {Bilal, Muhammad and Canini, Marco and Fonseca, Rodrigo and Rodrigues, Rodrigo},
  title = {With Great Freedom Comes Great Opportunity: Rethinking Resource Allocation for Serverless Functions},
  year = {2023},
  isbn = {9781450394871},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3552326.3567506},
  doi = {10.1145/3552326.3567506},
  abstract = {Current serverless offerings give users limited flexibility for configuring the resources allocated to their function invocations. This simplifies the interface for users to deploy server-less computations but creates deployments that are resource inefficient. In this paper, we take a principled approach to the problem of resource allocation for serverless functions, analyzing the effects of automating this choice in a way that leads to the best combination of performance and cost. In particular, we systematically explore the opportunities that come with decoupling memory and CPU resource allocations and also enabling the use of different VM types, and we find a rich trade-off space between performance and cost. The provider can use this in a number of ways, e.g., exposing all these parameters to the user; eliding preferences for performance and cost from users and simply offer the same performance with lower cost; or exposing a small number of choices for users to trade performance for cost.Our results show that, by decoupling memory and CPU allocation, there is the potential to have up to 40\% lower execution cost than the preset coupled configurations that are the norm in current serverless offerings. Similarly, making the correct choice of VM instance type can provide up to 50\% better execution time. Furthermore, we demonstrate that providers have the flexibility to choose different instance types for the same functions to maximize resource utilization while providing performance within 10--20\% of the best resource configuration for each respective function.},
  booktitle = {Proceedings of the Eighteenth European Conference on Computer Systems},
  pages = {381-397},
  numpages = {17},
  keywords = {resource allocation, optimization, serverless},
  location = {Rome, Italy},
  series = {EuroSys '23}
}

@misc{carbon_aware_computing,
  author    = {Will Buchanan and John Foxon and Daniel Cooke and Sangeeta Iyer and Elizabeth Graham and Bill DeRusha and Christian Binder and Kin Chiu and Laura Corso and Henry Richardson and Vaughan Knight and Asim Hussain and Avi Allison and Nithin Mathews},
  title     = {Carbon-aware computing: Meaasuring and reducing the carbon intensity associated with software in execution},
  year      = 2023,
  howpublished = {White Paper},
  publisher = {Green Software Foundation},

}

@misc{sinha2024shabari,
      title={Shabari: Delayed Decision-Making for Faster and Efficient Serverless Functions}, 
      author={Prasoon Sinha and Kostis Kaffes and Neeraja J. Yadwadkar},
      year={2024},
      eprint={2401.08859},
      archivePrefix={arXiv},
      primaryClass={cs.DC}
}

@inproceedings{parrotfish,
  author = {Moghimi, Arshia and Hattori, Joe and Li, Alexander and Ben Chikha, Mehdi and Shahrad, Mohammad},
  title = {Parrotfish: Parametric Regression for Optimizing Serverless Functions},
  year = {2023},
  isbn = {9798400703874},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3620678.3624654},
  doi = {10.1145/3620678.3624654},
  abstract = {Serverless computing is a new paradigm that aims to remove the burdens of cloud management from developers. Yet rightsizing serverless functions remains a pain point for developers. Choosing the right memory configuration is necessary to ensure cost and/or performance optimality for serverless workloads. In this work, we identify that using parametric regression can significantly simplify function rightsizing compared to black-box optimization techniques currently available. With this insight, we build a tool, called Parrotfish, which finds optimal configurations through an online learning process. It also allows users to communicate constraints on execution time, or to relax cost optimality to gain performance. Parrotfish achieves substantially lower exploration costs (1.81-9.96\texttimes{}) compared with the state-of-the-art tools, while delivering similar or better recommendations.},
  booktitle = {Proceedings of the 2023 ACM Symposium on Cloud Computing},
  pages = {177-192},
  numpages = {16},
  keywords = {Performance Modeling, Serverless Computing},
  location = {<conf-loc>, <city>Santa Cruz</city>, <state>CA</state>, <country>USA</country>, </conf-loc>},
  series = {SoCC '23}
}

@inproceedings{aquatope,
  author = {Zhou, Zhuangzhuang and Zhang, Yanqi and Delimitrou, Christina},
  title = {AQUATOPE: QoS-and-Uncertainty-Aware Resource Management for Multi-stage Serverless Workflows},
  year = {2022},
  isbn = {9781450399159},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3567955.3567960},
  doi = {10.1145/3567955.3567960},
  abstract = {Multi-stage serverless applications, i.e., workflows with many computation and I/O stages, are becoming increasingly representative of FaaS platforms. Despite their advantages in terms of fine-grained scalability and modular development, these applications are subject to suboptimal performance, resource inefficiency, and high costs to a larger degree than previous simple serverless functions.
  We present Aquatope, a QoS-and-uncertainty-aware resource scheduler for end-to-end serverless workflows that takes into account the inherent uncertainty present in FaaS platforms, and improves performance predictability and resource efficiency. Aquatope uses a set of scalable and validated Bayesian models to create pre-warmed containers ahead of function invocations, and to allocate appropriate resources at function granularity to meet a complex workflow's end-to-end QoS, while minimizing resource cost. Across a diverse set of analytics and interactive multi-stage serverless workloads, Aquatope significantly outperforms prior systems, reducing QoS violations by 5X, and cost by 34\% on average and up to 52\% compared to other QoS-meeting methods.},
  booktitle = {Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 1},
  pages = {1-14},
  numpages = {14},
  keywords = {serverless computing, resource management, resource efficiency, resource allocation, quality of service, machine learning for systems, function-as-a-service, datacenter, Cloud computing},
  location = {Vancouver, BC, Canada},
  series = {ASPLOS 2023}
}